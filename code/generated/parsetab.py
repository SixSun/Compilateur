
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '210BF27A060AC4CAF097DFFA18DD08B0'
    
_lr_action_items = {'SHOWMEWHATYOUGOT':([0,25,83,84,104,108,110,],[2,2,2,2,2,2,2,]),'PIF':([1,66,67,70,107,],[18,83,84,87,110,]),'TINIER':([20,21,37,38,61,62,63,],[-22,-21,58,-24,-19,-20,-23,]),'(':([2,6,7,8,12,18,19,23,26,27,28,39,40,42,48,50,51,52,53,55,56,57,58,59,60,68,75,92,95,96,],[23,27,28,29,31,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,92,23,23,23,]),'SHUTUPMORTY':([25,43,109,111,],[-1,-2,112,114,]),'FATTEST':([20,21,37,38,61,62,63,],[-22,-21,60,-24,-19,-20,-23,]),'IDENTIFIER':([0,2,3,10,13,14,15,16,18,19,23,25,26,27,28,29,31,39,40,42,48,50,51,52,53,55,56,57,58,59,60,68,83,84,92,95,96,104,108,110,],[5,20,24,30,32,33,34,35,20,20,20,5,20,20,20,5,49,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,5,5,20,20,20,5,5,5,]),'~':([4,9,17,20,21,22,38,44,47,61,62,63,64,65,69,71,72,73,74,76,77,78,79,80,81,82,85,86,88,89,90,91,100,101,105,106,112,114,116,],[25,-4,-3,-22,-21,-5,-24,65,68,-19,-20,-23,82,-31,86,88,89,90,91,-15,-14,-17,-16,-18,-13,-30,95,-28,-29,-26,-27,-25,-6,-7,-10,-9,115,117,-8,]),'WHALE':([0,25,54,83,84,104,108,110,],[6,6,75,6,6,6,6,6,]),'PAF':([20,21,25,36,38,43,61,62,63,76,77,78,79,80,81,93,94,98,113,115,118,],[-22,-21,-1,54,-24,-2,-19,-20,-23,-15,-14,-17,-16,-18,-13,100,101,105,116,-11,-12,]),'JEEZ':([0,25,83,84,104,108,110,],[7,7,7,7,7,7,7,]),'SCHMECKLE':([0,25,29,83,84,104,108,110,],[10,10,10,10,10,10,10,10,]),'WUBBALUBBADUBDUBS':([0,25,83,84,104,108,110,],[8,8,8,8,8,8,8,]),'GOT':([5,24,30,32,33,34,35,],[26,42,48,50,51,52,53,]),'ISNOT':([20,21,37,38,61,62,63,],[-22,-21,59,-24,-19,-20,-23,]),')':([20,21,38,41,45,46,49,61,62,63,76,77,78,79,80,81,99,102,],[-22,-21,-24,63,66,67,70,-19,-20,-23,-15,-14,-17,-16,-18,-13,106,107,]),'TINIEST':([20,21,37,38,61,62,63,],[-22,-21,55,-24,-19,-20,-23,]),'$end':([11,25,43,],[0,-1,-2,]),'FATTER':([20,21,37,38,61,62,63,],[-22,-21,56,-24,-19,-20,-23,]),'SCHWIFT':([0,25,83,84,104,108,110,],[12,12,12,12,12,12,12,]),'CANDO':([0,25,83,84,104,108,110,],[1,1,1,1,1,1,1,]),'MPFH':([0,25,29,83,84,104,108,110,],[13,13,13,13,13,13,13,13,]),'DEFAULT':([87,117,],[97,97,]),'FAKE':([0,25,29,83,84,104,108,110,],[3,3,3,3,3,3,3,3,]),':':([20,21,38,61,62,63,97,103,],[-22,-21,-24,-19,-20,-23,104,108,]),'ADD_OP':([2,18,19,20,21,22,23,26,27,28,37,38,39,40,41,42,44,48,50,51,52,53,55,56,57,58,59,60,61,62,63,64,68,69,71,72,73,74,76,77,78,79,80,81,92,95,96,102,103,],[19,19,19,-22,-21,39,19,19,19,19,39,-24,19,19,39,19,39,19,19,19,19,19,19,19,19,19,19,19,-19,-20,-23,39,19,39,39,39,39,39,39,39,39,39,39,39,19,19,19,39,39,]),'HEYRICK':([87,117,],[96,96,]),'IS':([20,21,37,38,61,62,63,],[-22,-21,57,-24,-19,-20,-23,]),'NUMBER':([2,18,19,23,26,27,28,39,40,42,48,50,51,52,53,55,56,57,58,59,60,68,92,95,96,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'THONG':([0,25,29,83,84,104,108,110,],[14,14,14,14,14,14,14,14,]),'ISIT':([0,25,29,83,84,104,108,110,],[15,15,15,15,15,15,15,15,]),'HEY':([0,25,29,83,84,104,108,110,],[16,16,16,16,16,16,16,16,]),'MUL_OP':([20,21,22,37,38,41,44,61,62,63,64,69,71,72,73,74,76,77,78,79,80,81,102,103,],[-22,-21,40,40,-24,40,40,40,-20,-23,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cases':([87,117,],[98,118,]),'program':([0,25,83,84,104,108,110,],[11,43,93,94,109,111,113,]),'condition':([18,27,28,68,92,],[36,45,46,85,99,]),'structure':([0,25,83,84,104,108,110,],[9,9,9,9,9,9,9,]),'expression':([2,18,19,23,26,27,28,39,40,42,48,50,51,52,53,55,56,57,58,59,60,68,92,95,96,],[22,37,38,41,44,37,37,61,62,64,69,71,72,73,74,76,77,78,79,80,81,37,37,102,103,]),'assignation':([0,25,29,83,84,104,108,110,],[17,17,47,17,17,17,17,17,]),'statement':([0,25,83,84,104,108,110,],[4,4,4,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement ~','program',2,'p_program_statement','parser_schwift.py',27),
  ('program -> statement ~ program','program',3,'p_program_statement','parser_schwift.py',28),
  ('statement -> assignation','statement',1,'p_statement','parser_schwift.py',36),
  ('statement -> structure','statement',1,'p_statement','parser_schwift.py',37),
  ('statement -> SHOWMEWHATYOUGOT expression','statement',2,'p_statement','parser_schwift.py',38),
  ('structure -> WHALE ( condition ) PIF program PAF','structure',7,'p_structure_whale','parser_schwift.py',46),
  ('structure -> JEEZ ( condition ) PIF program PAF','structure',7,'p_structure_jeez','parser_schwift.py',51),
  ('structure -> WUBBALUBBADUBDUBS ( assignation ~ condition ~ expression ) PIF program PAF','structure',11,'p_structure_for','parser_schwift.py',56),
  ('structure -> CANDO PIF condition PAF WHALE ( condition )','structure',8,'p_structure_do','parser_schwift.py',61),
  ('structure -> SCHWIFT ( IDENTIFIER ) PIF cases PAF','structure',7,'p_structure_switch','parser_schwift.py',66),
  ('cases -> DEFAULT : program SHUTUPMORTY ~','cases',5,'p_structure_cases','parser_schwift.py',71),
  ('cases -> HEYRICK expression : program SHUTUPMORTY ~ cases','cases',7,'p_structure_cases','parser_schwift.py',72),
  ('condition -> expression FATTEST expression','condition',3,'p_condition','parser_schwift.py',77),
  ('condition -> expression FATTER expression','condition',3,'p_condition','parser_schwift.py',78),
  ('condition -> expression TINIEST expression','condition',3,'p_condition','parser_schwift.py',79),
  ('condition -> expression TINIER expression','condition',3,'p_condition','parser_schwift.py',80),
  ('condition -> expression IS expression','condition',3,'p_condition','parser_schwift.py',81),
  ('condition -> expression ISNOT expression','condition',3,'p_condition','parser_schwift.py',82),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser_schwift.py',88),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser_schwift.py',89),
  ('expression -> NUMBER','expression',1,'p_expression_number_or_identifier','parser_schwift.py',94),
  ('expression -> IDENTIFIER','expression',1,'p_expression_number_or_identifier','parser_schwift.py',95),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser_schwift.py',100),
  ('expression -> ADD_OP expression','expression',2,'p_expression_minus','parser_schwift.py',105),
  ('assignation -> HEY IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',111),
  ('assignation -> THONG IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',112),
  ('assignation -> ISIT IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',113),
  ('assignation -> SCHMECKLE IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',114),
  ('assignation -> MPFH IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',115),
  ('assignation -> FAKE IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',116),
  ('assignation -> IDENTIFIER GOT expression ~','assignation',4,'p_reassign','parser_schwift.py',122),
]

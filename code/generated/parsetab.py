
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A665BEFBDA99283BBD5F0D78525CD3FE'
    
_lr_action_items = {'$end':([3,21,39,],[0,-1,-2,]),'PIF':([7,55,65,72,108,],[23,76,86,89,112,]),'HEY':([0,21,22,86,89,101,106,112,],[1,1,1,1,1,1,1,1,]),'IS':([27,28,41,47,68,69,70,],[-22,-21,62,-24,-23,-20,-19,]),'FATTER':([27,28,41,47,68,69,70,],[-22,-21,61,-24,-23,-20,-19,]),'~':([5,9,17,27,28,31,40,44,47,54,56,66,67,68,69,70,71,73,74,75,77,78,79,80,81,82,83,84,87,88,90,91,100,104,105,109,111,113,117,],[21,-4,-3,-22,-21,-5,57,66,-24,75,77,-31,87,-23,-20,-19,88,90,91,-25,-30,95,-18,-13,-16,-14,-17,-15,-26,-28,-27,-29,-10,-6,-7,-9,114,116,-8,]),')':([27,28,37,43,46,47,51,68,69,70,79,80,81,82,83,84,102,103,],[-22,-21,55,65,68,-24,72,-23,-20,-19,-18,-13,-16,-14,-17,-15,108,109,]),'GOT':([10,18,20,26,32,34,35,],[25,36,38,45,50,52,53,]),'NUMBER':([12,23,24,25,29,30,33,36,38,45,48,49,50,52,53,57,58,59,60,61,62,63,92,95,96,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FAKE':([0,21,22,86,89,101,106,112,],[4,4,4,4,4,4,4,4,]),'JEEZ':([0,21,86,89,101,106,112,],[14,14,14,14,14,14,14,]),'HEYRICK':([76,116,],[92,92,]),'WUBBALUBBADUBDUBS':([0,21,86,89,101,106,112,],[6,6,6,6,6,6,6,]),'MUL_OP':([27,28,31,41,44,46,47,54,56,67,68,69,70,71,73,74,79,80,81,82,83,84,99,102,],[-22,-21,48,48,48,48,-24,48,48,48,-23,-20,48,48,48,48,48,48,48,48,48,48,48,48,]),'ADD_OP':([12,23,24,25,27,28,29,30,31,33,36,38,41,44,45,46,47,48,49,50,52,53,54,56,57,58,59,60,61,62,63,67,68,69,70,71,73,74,79,80,81,82,83,84,92,95,96,99,102,],[30,30,30,30,-22,-21,30,30,49,30,30,30,49,49,30,49,-24,30,30,30,30,30,49,49,30,30,30,30,30,30,30,49,-23,-20,-19,49,49,49,49,49,49,49,49,49,30,30,30,49,49,]),'DEFAULT':([76,116,],[94,94,]),'WHALE':([0,21,64,86,89,101,106,112,],[8,8,85,8,8,8,8,8,]),':':([27,28,47,68,69,70,94,99,],[-22,-21,-24,-23,-20,-19,101,106,]),'(':([2,6,8,12,14,23,24,25,29,30,33,36,38,45,48,49,50,52,53,57,58,59,60,61,62,63,85,92,95,96,],[19,22,24,29,33,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,96,29,29,29,]),'SHUTUPMORTY':([21,39,107,110,],[-1,-2,111,113,]),'SCHWIFT':([0,21,86,89,101,106,112,],[2,2,2,2,2,2,2,]),'TINIEST':([27,28,41,47,68,69,70,],[-22,-21,63,-24,-23,-20,-19,]),'CANDO':([0,21,86,89,101,106,112,],[7,7,7,7,7,7,7,]),'IDENTIFIER':([0,1,4,11,12,13,15,16,19,21,22,23,24,25,29,30,33,36,38,45,48,49,50,52,53,57,58,59,60,61,62,63,86,89,92,95,96,101,106,112,],[10,18,20,26,27,32,34,35,37,10,10,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,10,10,27,27,27,10,10,10,]),'THONG':([0,21,22,86,89,101,106,112,],[11,11,11,11,11,11,11,11,]),'ISNOT':([27,28,41,47,68,69,70,],[-22,-21,58,-24,-23,-20,-19,]),'SHOWMEWHATYOUGOT':([0,21,86,89,101,106,112,],[12,12,12,12,12,12,12,]),'PAF':([21,27,28,39,42,47,68,69,70,79,80,81,82,83,84,93,97,98,114,115,118,],[-1,-22,-21,-2,64,-24,-23,-20,-19,-18,-13,-16,-14,-17,-15,100,104,105,-11,117,-12,]),'SCHMECKLE':([0,21,22,86,89,101,106,112,],[13,13,13,13,13,13,13,13,]),'TINIER':([27,28,41,47,68,69,70,],[-22,-21,60,-24,-23,-20,-19,]),'ISIT':([0,21,22,86,89,101,106,112,],[15,15,15,15,15,15,15,15,]),'MPFH':([0,21,22,86,89,101,106,112,],[16,16,16,16,16,16,16,16,]),'FATTEST':([27,28,41,47,68,69,70,],[-22,-21,59,-24,-23,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'condition':([23,24,33,57,96,],[42,43,51,78,103,]),'statement':([0,21,86,89,101,106,112,],[5,5,5,5,5,5,5,]),'program':([0,21,86,89,101,106,112,],[3,39,97,98,107,110,115,]),'cases':([76,116,],[93,118,]),'assignation':([0,21,22,86,89,101,106,112,],[17,17,40,17,17,17,17,17,]),'expression':([12,23,24,25,29,30,33,36,38,45,48,49,50,52,53,57,58,59,60,61,62,63,92,95,96,],[31,41,41,44,46,47,41,54,56,67,69,70,71,73,74,41,79,80,81,82,83,84,99,102,41,]),'structure':([0,21,86,89,101,106,112,],[9,9,9,9,9,9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement ~','program',2,'p_program_statement','parser_schwift.py',27),
  ('program -> statement ~ program','program',3,'p_program_statement','parser_schwift.py',28),
  ('statement -> assignation','statement',1,'p_statement','parser_schwift.py',36),
  ('statement -> structure','statement',1,'p_statement','parser_schwift.py',37),
  ('statement -> SHOWMEWHATYOUGOT expression','statement',2,'p_statement','parser_schwift.py',38),
  ('structure -> WHALE ( condition ) PIF program PAF','structure',7,'p_structure_whale','parser_schwift.py',46),
  ('structure -> JEEZ ( condition ) PIF program PAF','structure',7,'p_structure_jeez','parser_schwift.py',51),
  ('structure -> WUBBALUBBADUBDUBS ( assignation ~ condition ~ expression ) PIF program PAF','structure',11,'p_structure_for','parser_schwift.py',56),
  ('structure -> CANDO PIF condition PAF WHALE ( condition )','structure',8,'p_structure_do','parser_schwift.py',61),
  ('structure -> SCHWIFT ( IDENTIFIER ) PIF cases PAF','structure',7,'p_structure_switch','parser_schwift.py',66),
  ('cases -> DEFAULT : program SHUTUPMORTY ~','cases',5,'p_structure_cases','parser_schwift.py',71),
  ('cases -> HEYRICK expression : program SHUTUPMORTY ~ cases','cases',7,'p_structure_cases','parser_schwift.py',72),
  ('condition -> expression FATTEST expression','condition',3,'p_condition','parser_schwift.py',77),
  ('condition -> expression FATTER expression','condition',3,'p_condition','parser_schwift.py',78),
  ('condition -> expression TINIEST expression','condition',3,'p_condition','parser_schwift.py',79),
  ('condition -> expression TINIER expression','condition',3,'p_condition','parser_schwift.py',80),
  ('condition -> expression IS expression','condition',3,'p_condition','parser_schwift.py',81),
  ('condition -> expression ISNOT expression','condition',3,'p_condition','parser_schwift.py',82),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser_schwift.py',88),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser_schwift.py',89),
  ('expression -> NUMBER','expression',1,'p_expression_number_or_identifier','parser_schwift.py',94),
  ('expression -> IDENTIFIER','expression',1,'p_expression_number_or_identifier','parser_schwift.py',95),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser_schwift.py',100),
  ('expression -> ADD_OP expression','expression',2,'p_expression_minus','parser_schwift.py',105),
  ('assignation -> HEY IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',111),
  ('assignation -> THONG IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',112),
  ('assignation -> ISIT IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',113),
  ('assignation -> SCHMECKLE IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',114),
  ('assignation -> MPFH IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',115),
  ('assignation -> FAKE IDENTIFIER GOT expression ~','assignation',5,'p_assign','parser_schwift.py',116),
  ('assignation -> IDENTIFIER GOT expression ~','assignation',4,'p_reassign','parser_schwift.py',121),
]
